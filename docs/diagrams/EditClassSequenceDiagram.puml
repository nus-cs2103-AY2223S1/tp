@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":TeachersPetParser" as TeachersPetParser LOGIC_COLOR
participant ":EditCommandParser" as EditCommandParser LOGIC_COLOR
participant ":EditCommand" as EditCommand LOGIC_COLOR
participant "<<class>> ClassStorage" as ClassStorage CLASS_STORAGE_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("edit 1 dt/Mon 1000-1300")
activate LogicManager

LogicManager -> TeachersPetParser : parseCommand("edit 1 dt/Mon 1000-1300")
activate TeachersPetParser

create EditCommandParser
TeachersPetParser -> EditCommandParser
activate EditCommandParser

EditCommandParser --> TeachersPetParser
deactivate EditCommandParser

TeachersPetParser -> EditCommandParser : parse(" 1 dt/Mon 1000-1300")
activate EditCommandParser

create EditCommand
EditCommandParser -> EditCommand
activate EditCommand

EditCommand --> EditCommandParser : command
deactivate EditCommand

EditCommandParser --> TeachersPetParser : command
deactivate EditCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
EditCommandParser -[hidden]-> TeachersPetParser
destroy EditCommandParser

TeachersPetParser --> LogicManager : command
deactivate TeachersPetParser

LogicManager -> EditCommand : execute(model)
activate EditCommand

EditCommand -> Model : getFilteredStudentList()
activate Model

Model --> EditCommand : List<Student>
deactivate Model

EditCommand -> EditCommand : createEditedStudent()
activate EditCommand

EditCommand --> EditCommand : Student
deactivate EditCommand

create ClassStorage
EditCommand -[hidden]-> ClassStorage
EditCommand -> ClassStorage : saveClass
activate ClassStorage

ClassStorage --> EditCommand
deactivate ClassStorage

EditCommand -[hidden]-> ClassStorage
EditCommand -> ClassStorage : removeExistingClass
activate ClassStorage

ClassStorage --> EditCommand
deactivate ClassStorage


EditCommand -> Model : setStudent()
activate Model

Model --> EditCommand
deactivate Model

EditCommand -> Model : updateFilteredStudentList()
activate Model

Model --> EditCommand
deactivate Model

EditCommand -> Model : updateFilteredScheduleList
activate Model

Model --> EditCommand
deactivate Model

create CommandResult
EditCommand -> CommandResult
activate CommandResult

CommandResult --> EditCommand
deactivate CommandResult

EditCommand --> LogicManager : result
deactivate EditCommand

[<--LogicManager
deactivate LogicManager
@enduml
