@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":FypManagerParser" as FypManagerParser LOGIC_COLOR
participant ":EditCommandParser" as EditCommandParser LOGIC_COLOR
participant "e:EditCommand" as EditCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("edit A0123456G p/Food Genetics")
activate LogicManager

LogicManager -> FypManagerParser : parseCommand("edit A0123456G p/Food Genetics")
activate FypManagerParser

create EditCommandParser
FypManagerParser -> EditCommandParser
activate EditCommandParser

EditCommandParser --> FypManagerParser
deactivate EditCommandParser

FypManagerParser -> EditCommandParser : parse("A0123456G p/Food Genetics")
activate EditCommandParser

create EditCommand
EditCommandParser -> EditCommand
activate EditCommand

EditCommand --> EditCommandParser : e
deactivate EditCommand

EditCommandParser --> FypManagerParser : e
deactivate EditCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
EditCommandParser -[hidden]-> FypManagerParser
destroy EditCommandParser

FypManagerParser --> LogicManager : e
deactivate FypManagerParser

LogicManager -> EditCommand : execute()
activate EditCommand

EditCommand -> Model :getIndexByStudentId(studentId)
activate Model

Model --> EditCommand
deactivate Model

activate EditCommand
EditCommand -> EditCommand : createEditedStudent(studentToEdit, editStudentDescriptor)
deactivate EditCommand

EditCommand -> Model :setStudent(studentToEdit, editedStudent)
activate Model

Model --> EditCommand
deactivate Model

create CommandResult
EditCommand -> CommandResult
activate CommandResult

CommandResult --> EditCommand
deactivate CommandResult

EditCommand --> LogicManager : result
deactivate EditCommand

[<--LogicManager
deactivate LogicManager
@enduml
