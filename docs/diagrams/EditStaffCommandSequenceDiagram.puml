@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":HrProParser" as HrProParser LOGIC_COLOR
participant ":EditStaffCommandParser" as EditStaffCommandParser LOGIC_COLOR
participant ":EditStaffCommand" as EditStaffCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager:execute()
activate LogicManager

LogicManager -> HrProParser : parseCommand()
activate HrProParser

create EditStaffCommandParser
HrProParser -> EditStaffCommandParser
activate EditStaffCommandParser

EditStaffCommandParser --> HrProParser
deactivate EditStaffCommandParser

HrProParser -> EditStaffCommandParser : parse()
activate EditStaffCommandParser

create EditStaffCommand
EditStaffCommandParser -> EditStaffCommand
activate EditStaffCommand
EditStaffCommand --> EditStaffCommandParser
deactivate EditStaffCommand

EditStaffCommandParser --> HrProParser: command
deactivate EditStaffCommandParser
EditStaffCommandParser -[hidden]-> HrProParser: command
destroy EditStaffCommandParser

HrProParser --> LogicManager : command
deactivate HrProParser

LogicManager -> EditStaffCommand : execute()
activate EditStaffCommand

EditStaffCommand -> Model : getStaffFromProject()
activate Model
Model --> EditStaffCommand
deactivate Model

EditStaffCommand -> Model: getProjectFromIndex()
activate Model
Model --> EditStaffCommand
deactivate Model

EditStaffCommand -> Model : isSuccessStaffEdit()
activate Model
Model --> EditStaffCommand
deactivate Model

create CommandResult
EditStaffCommand -> CommandResult
activate CommandResult
CommandResult --> EditStaffCommand
deactivate CommandResult

EditStaffCommand --> LogicManager
deactivate EditStaffCommand
EditStaffCommand -[hidden]-> LogicManager
destroy EditStaffCommand

[<--LogicManager : Done
deactivate LogicManager

@enduml
