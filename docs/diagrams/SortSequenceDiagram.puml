@startuml
!include style.puml


box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":TrackAScholarParser" as TrackAScholarParser LOGIC_COLOR
participant ":SortCommandParser" as SortCommandParser LOGIC_COLOR

participant ":SortCommand" as SortCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1

participant ":Model" as Model MODEL_COLOR
participant "Applicant" as Applicant <<class>> MODEL_COLOR
end box

[-> LogicManager : execute("sort name")
activate LogicManager

LogicManager -> TrackAScholarParser : parseCommand(args)
activate TrackAScholarParser

create SortCommandParser
TrackAScholarParser -> SortCommandParser : SortCommandParser()
activate SortCommandParser

SortCommandParser --> TrackAScholarParser
deactivate SortCommandParser

'Hidden arrow to position the destroy marker below the end of the activation bar.
SortCommandParser -[hidden]-> TrackAScholarParser: BUFFER_MESSAGE

TrackAScholarParser -> SortCommandParser : parse("name")
activate SortCommandParser

SortCommandParser -> SortCommandParser : checkInputSizeAndReverseFlag()
activate SortCommandParser

SortCommandParser -> Applicant : sortByName()
activate Applicant

Applicant --> SortCommandParser : comparator
deactivate Applicant

SortCommandParser --> SortCommandParser : comparator
deactivate SortCommandParser

create SortCommand
SortCommandParser -> SortCommand : SortCommand(comparator)
activate SortCommand

SortCommand --> SortCommandParser
deactivate SortCommand

SortCommandParser --> TrackAScholarParser
deactivate SortCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
SortCommandParser -[hidden]-> TrackAScholarParser
destroy SortCommandParser

TrackAScholarParser --> LogicManager
deactivate TrackAScholarParser

LogicManager -> SortCommand : execute()
activate SortCommand

SortCommand -> Model : sortApplicants(comparator)
activate Model

Model --> SortCommand
deactivate Model

SortCommand -> Model : updateFilteredApplicantList(predicate)
activate Model

Model --> SortCommand
deactivate Model

create CommandResult
SortCommand -> CommandResult
activate CommandResult

CommandResult --> SortCommand
deactivate CommandResult

SortCommand --> LogicManager : result
deactivate SortCommand

[<--LogicManager
deactivate LogicManager
@enduml
