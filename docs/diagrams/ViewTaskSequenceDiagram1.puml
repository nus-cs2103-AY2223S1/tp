@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":UninurseBookParser" as UninurseBookParser LOGIC_COLOR
participant "parser:ViewTaskCommandParser" as ViewTaskCommandParser LOGIC_COLOR
participant "command:ViewTaskCommand" as ViewTaskCommand LOGIC_COLOR
participant "result:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("viewTask 1")
activate LogicManager

LogicManager -> UninurseBookParser : parseCommand("viewTask 1")
activate UninurseBookParser

create ViewTaskCommandParser
UninurseBookParser -> ViewTaskCommandParser
activate ViewTaskCommandParser

ViewTaskCommandParser --> UninurseBookParser : parser
deactivate ViewTaskCommandParser

UninurseBookParser -> ViewTaskCommandParser : parse("1")
activate ViewTaskCommandParser

create ViewTaskCommand
ViewTaskCommandParser -> ViewTaskCommand
activate ViewTaskCommand

ViewTaskCommand --> ViewTaskCommandParser : command
deactivate ViewTaskCommand

ViewTaskCommandParser --> UninurseBookParser : command
deactivate ViewTaskCommandParser
ViewTaskCommandParser -[hidden]-> UninurseBookParser : command
destroy ViewTaskCommandParser

UninurseBookParser --> LogicManager : command
deactivate UninurseBookParser

LogicManager -> ViewTaskCommand : execute()
activate ViewTaskCommand

ViewTaskCommand -> Model : updateFilteredPersonList()
activate Model

Model --> ViewTaskCommand
deactivate Model

ViewTaskCommand -> Model : setPatientOfInterest()
activate Model

Model --> ViewTaskCommand
deactivate Model

create CommandResult
ViewTaskCommand -> CommandResult
activate CommandResult

CommandResult --> ViewTaskCommand : result
deactivate CommandResult

ViewTaskCommand --> LogicManager : result
deactivate ViewTaskCommand
ViewTaskCommand -[hidden]-> LogicManager : result
destroy ViewTaskCommand

[<--LogicManager : result
deactivate LogicManager
@enduml
