@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":FypManagerParser" as FypManagerParser LOGIC_COLOR
participant ":DeleteStudentCommandParser" as DeleteStudentCommandParser LOGIC_COLOR
participant "d:DeleteStudentCommand" as DeleteStudentCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("delete -s i/A0123456X")
activate LogicManager

LogicManager -> FypManagerParser : parseCommand("delete -s i/A0123456X")
activate FypManagerParser

create DeleteStudentCommandParser
FypManagerParser -> DeleteStudentCommandParser
activate DeleteStudentCommandParser

DeleteStudentCommandParser --> FypManagerParser
deactivate DeleteStudentCommandParser

FypManagerParser -> DeleteStudentCommandParser : parse("i/A0123456X")
activate DeleteStudentCommandParser

create DeleteStudentCommand
DeleteStudentCommandParser -> DeleteStudentCommand
activate DeleteStudentCommand

DeleteStudentCommand --> DeleteStudentCommandParser : d
deactivate DeleteStudentCommand

DeleteStudentCommandParser --> FypManagerParser : d
deactivate DeleteStudentCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
DeleteStudentCommandParser -[hidden]-> FypManagerParser
destroy DeleteStudentCommandParser

FypManagerParser --> LogicManager : d
deactivate FypManagerParser

LogicManager -> DeleteStudentCommand : execute()
activate DeleteStudentCommand

DeleteStudentCommand -> Model :getIndexByStudentId(studentId)
activate Model

Model --> DeleteStudentCommand : i
deactivate Model

alt student does not exist

DeleteStudentCommand -> Model : i >= studentList.size()
activate Model

Model --> DeleteStudentCommand : CommandException
deactivate Model

else else
DeleteStudentCommand -> Model : deleteStudent(i)
activate Model

Model --> DeleteStudentCommand
deactivate Model

create CommandResult
DeleteStudentCommand -> CommandResult
activate CommandResult

CommandResult --> DeleteStudentCommand
deactivate CommandResult
end

DeleteStudentCommand --> LogicManager : result
deactivate DeleteStudentCommand

[<--LogicManager
deactivate LogicManager
@enduml
