@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":UninurseBookParser" as UninurseBookParser LOGIC_COLOR
participant ":DeleteGenericCommandParser" as DeleteGenericCommandParser LOGIC_COLOR


participant ":DeletePatientCommandParser" as DeletePatientCommandParser LOGIC_COLOR
participant "command:DeletePatientCommand" as DeletePatientCommand LOGIC_COLOR
participant "result:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("delete -p 1")
activate LogicManager

LogicManager -> UninurseBookParser : parseCommand("delete -p 1")
activate UninurseBookParser

create DeleteGenericCommandParser
UninurseBookParser -> DeleteGenericCommandParser
activate DeleteGenericCommandParser

DeleteGenericCommandParser --> UninurseBookParser
deactivate DeleteGenericCommandParser


UninurseBookParser -> DeleteGenericCommandParser : parse("-p 1")
activate DeleteGenericCommandParser

create DeletePatientCommandParser
DeleteGenericCommandParser -> DeletePatientCommandParser
activate DeletePatientCommandParser
DeletePatientCommandParser --> DeleteGenericCommandParser
deactivate DeletePatientCommandParser

DeleteGenericCommandParser -> DeletePatientCommandParser : parse("1")
activate DeletePatientCommandParser
create DeletePatientCommand

DeletePatientCommandParser -> DeletePatientCommand
activate DeletePatientCommand
DeletePatientCommand --> DeletePatientCommandParser : command
deactivate DeletePatientCommand

DeletePatientCommandParser --> DeleteGenericCommandParser : command
deactivate DeletePatientCommandParser

DeletePatientCommandParser -[hidden]-> DeleteGenericCommandParser
destroy DeletePatientCommandParser

DeleteGenericCommandParser --> UninurseBookParser : command
deactivate DeleteGenericCommandParser

DeleteGenericCommandParser -[hidden]-> UninurseBookParser
destroy DeleteGenericCommandParser

UninurseBookParser --> LogicManager : command
deactivate UninurseBookParser


LogicManager -> DeletePatientCommand : execute()
activate DeletePatientCommand

DeletePatientCommand -> Model : getFilteredPersonList()
activate Model
Model --> DeletePatientCommand : filteredPersonList
deactivate Model


DeletePatientCommand -> Model : deletePerson(patient)
activate Model
Model --> DeletePatientCommand
deactivate Model

DeletePatientCommand -> Model : setPatientOfInterest(patient)
activate Model
Model --> DeletePatientCommand
deactivate Model

create CommandResult
DeletePatientCommand -> CommandResult
activate CommandResult
CommandResult --> DeletePatientCommand : result
deactivate CommandResult

DeletePatientCommand --> LogicManager : result
deactivate DeletePatientCommand

LogicManager -> Model : makeSnapshot(result)
activate Model

Model --> LogicManager
deactivate Model


[<--LogicManager : result
deactivate LogicManager













@enduml
