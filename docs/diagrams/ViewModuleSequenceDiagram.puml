@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":ModuleViewCommandParser" as ModuleViewCommandParser LOGIC_COLOR
participant "v:ModuleViewCommand" as ModuleViewCommand LOGIC_COLOR
participant "CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("mview c/CS1101S")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("mview c/CS1101S")
activate AddressBookParser

create ModuleViewCommandParser
AddressBookParser -> ModuleViewCommandParser
activate ModuleViewCommandParser

ModuleViewCommandParser --> AddressBookParser
deactivate ModuleViewCommandParser

AddressBookParser -> ModuleViewCommandParser : parse("c/ CS1101S")
activate ModuleViewCommandParser

create ModuleViewCommand
ModuleViewCommandParser -> ModuleViewCommand
activate ModuleViewCommand

ModuleViewCommand --> ModuleViewCommandParser : v
deactivate ModuleViewCommand

ModuleViewCommandParser --> AddressBookParser
deactivate ModuleViewCommandParser

AddressBookParser --> LogicManager : v
destroy ModuleViewCommandParser
deactivate AddressBookParser

LogicManager -> ModuleViewCommand : execute()
activate ModuleViewCommand

ModuleViewCommand -> Model : updateFilteredStudentList(predicate)
activate Model

Model --> ModuleViewCommand

ModuleViewCommand -> Model : updateFilteredTutorList(predicate)

Model --> ModuleViewCommand

create CommandResult
ModuleViewCommand -> CommandResult
activate CommandResult

CommandResult --> ModuleViewCommand
deactivate CommandResult

ModuleViewCommand --> LogicManager : result
deactivate ModuleViewCommand
ModuleViewCommand -[hidden]-> LogicManager : result
destroy ModuleViewCommand

[<--LogicManager
deactivate LogicManager
@enduml
