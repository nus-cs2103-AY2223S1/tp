@startuml
!include style.puml
skinparam arrowThickness 1.1
skinparam arrowColor LOGIC_COLOR_T4
skinparam classBackgroundColor LOGIC_COLOR

package Logic {

Class TaaParser
Class ABCCommandParser
Class ABCCommand
Class XYZCommand
Class CommandResult
Class "{abstract}\nCommand" as Command


Class "<<interface>>\nLogic" as Logic
Class LogicManager
}

package Model{
Class HiddenModel #FFFFFF
}

package Storage{
}

Class HiddenOutside #FFFFFF
HiddenOutside ..> Logic

LogicManager .right.|> Logic
LogicManager -right->"1" TaaParser
TaaParser .right.> XYZCommand : directly\ncreates >
TaaParser ..> ABCCommandParser : creates >
ABCCommandParser ..> ABCCommand : creates >

XYZCommand -up-|> Command
ABCCommand -up-|> Command
LogicManager .left.> Command : executes >

LogicManager --> Model
LogicManager --> Storage
Storage --[hidden] Model
Command .[hidden]up.> Storage
Command .right.> Model
note bottom of XYZCommand: XYZCommand represents any\ncommand with no arguments, e.g.\nTaskListCommand and \nHelpCommand.
note bottom of ABCCommand: ABCCommand represents any\ncommand with arguments, e.g.\nTaskDeleteCommand and\nTutorialGroupAddCommand.
Logic ..> CommandResult
LogicManager .down.> CommandResult
Command .up.> CommandResult : produces >
@enduml
