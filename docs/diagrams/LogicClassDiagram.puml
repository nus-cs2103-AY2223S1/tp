@startuml
!include style.puml
skinparam arrowThickness 1.1
skinparam arrowColor LOGIC_COLOR_T4
skinparam classBackgroundColor LOGIC_COLOR

package Logic {

Class LogicManager
Class NuSchedulerParser
Class XCommandParser
Class ZXCommandParser
Class ZXCommand
Class YCommandParser
Class YCommand
Class XCommand
Class CommandResult
Class "{abstract}\nCommand" as Command


Class "<<interface>>\nLogic" as Logic
}

package Model{
Class HiddenModel #FFFFFF
}

package Storage{
}

Class HiddenOutside #FFFFFF
HiddenOutside ..> Logic

LogicManager .right.|> Logic
LogicManager --->"1" NuSchedulerParser
NuSchedulerParser ..> XCommandParser : creates >
NuSchedulerParser ..> YCommandParser : creates >
XCommandParser ..> ZXCommandParser : creates >
ZXCommandParser ..> ZXCommand : creates >
YCommandParser ..> YCommand : creates >

XCommand -up-|> Command
ZXCommand -up-|> XCommand
YCommand -up-|> Command
LogicManager .left.> Command : executes >

LogicManager --> Model
LogicManager --> Storage
Storage --[hidden] Model
Command .[hidden]up.> Storage
Command .right.> Model
note right of ZXCommand: ZXCommand = AddProfileCommand, \nFindEventCommand, etc
note right of YCommand: YCommand = ClearCommand, \nExitCommand, etc
note right of XCommand: XCommand = ProfileCommand, \nEventCommand, etc

Logic ..> CommandResult
LogicManager .down.> CommandResult
Command .up.> CommandResult : produces >
@enduml
