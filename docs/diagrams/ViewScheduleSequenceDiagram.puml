@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":ProfNusParser" as ProfNusParser LOGIC_COLOR
participant ":ViewScheduleCommandParser" as ViewScheduleCommandParser LOGIC_COLOR
participant "v:ViewScheduleCommand" as ViewScheduleCommand LOGIC_COLOR
participant "result:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("sview")
activate LogicManager

LogicManager -> ProfNusParser : parseCommand("sview")
activate ProfNusParser

create ViewScheduleCommandParser
ProfNusParser -> ViewScheduleCommandParser
activate ViewScheduleCommandParser

ViewScheduleCommandParser --> ProfNusParser
deactivate ViewScheduleCommandParser

ProfNusParser -> ViewScheduleCommandParser : parse("")
activate ViewScheduleCommandParser

create ViewScheduleCommand
ViewScheduleCommandParser -> ViewScheduleCommand
activate ViewScheduleCommand

ViewScheduleCommand --> ViewScheduleCommandParser : v
deactivate ViewScheduleCommand

ViewScheduleCommandParser --> ProfNusParser: v
deactivate ViewScheduleCommandParser

ProfNusParser --> LogicManager : v
destroy ViewScheduleCommandParser
deactivate ProfNusParser

LogicManager -> ViewScheduleCommand : execute()
activate ViewScheduleCommand

ViewScheduleCommand -> Model : updateFilteredScheduleList(PREDICATE_SHOW_ALL_SCHEDULES)
activate Model

Model --> ViewScheduleCommand
deactivate Model

create CommandResult
ViewScheduleCommand -> CommandResult
activate CommandResult

CommandResult --> ViewScheduleCommand : result
deactivate CommandResult

ViewScheduleCommand --> LogicManager : result
deactivate ViewScheduleCommand

ViewScheduleCommand -[hidden]-> LogicManager : result
destroy ViewScheduleCommand

[<--LogicManager
deactivate LogicManager
@enduml
