@startuml
!include ./style.puml
<style>
</style>
box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":ModtrektParser" as ModtrektParser LOGIC_COLOR
participant "commanad:CdModuleCommand" as CdModuleCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant ":ModCode" as ModCode MODEL_COLOR
end box

[-> LogicManager : execute("cd CS2106")
activate LogicManager

LogicManager -> ModtrektParser : parseCommand("cd CS2106")
activate ModtrektParser

create ModCode
ModtrektParser -> ModCode : ModCode("CS2106")
activate ModCode

ModCode --> ModtrektParser : moduleCode
deactivate ModCode

create CdModuleCommand
ModtrektParser -> CdModuleCommand : CdModuleCommand(moduleCode)
activate CdModuleCommand

CdModuleCommand --> ModtrektParser : command
deactivate CdModuleCommand

ModtrektParser --> LogicManager : command
deactivate ModtrektParser

LogicManager -> CdModuleCommand : execute()
activate CdModuleCommand

CdModuleCommand -> Model : setCurrentModule(moduleCode)
activate Model

Model -> Model : updateFilteredModuleList(modulePredicate)
activate Model
Model --> Model
deactivate Model

Model -> Model : updateFilteredTaskList(taskPredicate)
activate Model
Model --> Model
deactivate Model


Model --> CdModuleCommand
deactivate Model

create CommandResult
CdModuleCommand -> CommandResult
activate CommandResult

CommandResult --> CdModuleCommand : result
deactivate CommandResult

CdModuleCommand --> LogicManager : result
deactivate CdModuleCommand

[<--LogicManager
deactivate LogicManager
@enduml
