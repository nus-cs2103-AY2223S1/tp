@startuml
!include style.puml

box Ui MODEL_COLOR_T1
participant ":MainWindow" as MainWindow MODEL_COLOR
end box

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":ClientCommandParser" as ClientCommandParser LOGIC_COLOR
participant ":ListClientCommand" as ListClientCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

[-> MainWindow : executeCommand("client -l")
activate MainWindow

MainWindow -> LogicManager : execute("client -l")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("client -l")
activate AddressBookParser

create ClientCommandParser
AddressBookParser -> ClientCommandParser
activate ClientCommandParser
ClientCommandParser --> AddressBookParser
deactivate ClientCommandParser
AddressBookParser -> ClientCommandParser : parse("-l")
activate ClientCommandParser

create ListClientCommand
ClientCommandParser -> ListClientCommand
activate ListClientCommand

ListClientCommand --> ClientCommandParser
deactivate ListClientCommand

ClientCommandParser --> AddressBookParser
deactivate ClientCommandParser

AddressBookParser --> LogicManager
deactivate AddressBookParser

LogicManager -> ListClientCommand : execute()
activate ListClientCommand

create CommandResult
ListClientCommand -> CommandResult
activate CommandResult

CommandResult --> ListClientCommand
deactivate CommandResult

ListClientCommand --> LogicManager : result
deactivate ListClientCommand

ListClientCommand -[hidden]-> LogicManager : result
destroy ListClientCommand

MainWindow <-- LogicManager : result
deactivate LogicManager
MainWindow --> MainWindow : swapClientListDisplay()

[<-- MainWindow : result
deactivate MainWindow

@enduml
